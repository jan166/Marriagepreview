import React from 'react';
import { motion } from 'framer-motion';
import { Check } from 'lucide-react';

const QuestionItem = ({ question, questionIndex, selectedAnswer, onAnswer }) => {
  const getCircleSize = (index) => {
    const sizes = [
      'w-11 h-11 sm:w-14 sm:h-14',  // 0 - Strongly Agree (largest)
      'w-9 h-9 sm:w-12 sm:h-12',    // 1 - Agree
      'w-8 h-8 sm:w-10 sm:h-10',    // 2 - Somewhat Agree
      'w-6 h-6 sm:w-8 sm:h-8',      // 3 - Neutral (smallest)
      'w-8 h-8 sm:w-10 sm:h-10',    // 4 - Somewhat Disagree
      'w-9 h-9 sm:w-12 sm:h-12',    // 5 - Disagree
      'w-11 h-11 sm:w-14 sm:h-14'   // 6 - Strongly Disagree (largest)
    ];
    return sizes[index];
  };

  const getCheckSize = (index) => {
    if (index === 3) return 'w-3 h-3 sm:w-4 sm:h-4';
    if (index === 2 || index === 4) return 'w-4 h-4 sm:w-5 sm:h-5';
    return 'w-5 h-5 sm:w-6 sm:h-6';
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: 30 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5, delay: questionIndex * 0.05 }}
      className="py-8 px-4 md:px-6 border-b border-gray-200 last:border-b-0"
    >
      <div className="flex items-start gap-3 mb-6">
        <div className="flex-shrink-0 w-7 h-7 bg-gradient-to-br from-rose-400 to-pink-500 rounded-full flex items-center justify-center text-white font-bold text-sm">
          {questionIndex + 1}
        </div>
        <h2 className="text-base md:text-lg font-medium text-gray-800 leading-relaxed pt-0.5">
          {question.text}
        </h2>
      </div>

      {question.type === 'scale' ? (
        <div className="mb-4">
          <div className="flex justify-between items-center mb-6 gap-1 sm:gap-2">
            {Array.from({ length: 7 }, (_, idx) => (
              <motion.button
                key={idx}
                onClick={() => onAnswer(questionIndex, idx)}
                whileHover={{ scale: 1.1 }}
                whileTap={{ scale: 0.95 }}
                className="flex flex-col items-center"
              >
                <div
                  className={`${getCircleSize(idx)} rounded-full border-2 transition-all duration-300 flex items-center justify-center ${
                    selectedAnswer === idx
                      ? idx <= 2 
                        ? 'bg-gradient-to-br from-green-400 to-emerald-500 border-green-500 shadow-lg'
                        : idx === 3
                        ? 'bg-gradient-to-br from-gray-300 to-gray-400 border-gray-400 shadow-lg'
                        : 'bg-gradient-to-br from-purple-400 to-pink-500 border-purple-500 shadow-lg'
                      : idx <= 2
                      ? 'border-green-300 hover:border-green-400 hover:bg-green-50'
                      : idx === 3
                      ? 'border-gray-300 hover:border-gray-400 hover:bg-gray-50'
                      : 'border-purple-300 hover:border-purple-400 hover:bg-purple-50'
                  }`}
                >
                  {selectedAnswer === idx && (
                    <Check className={`${getCheckSize(idx)} text-white`} />
                  )}
                </div>
              </motion.button>
            ))}
          </div>
          
          <div className="flex justify-between items-center">
            <span className="text-xs md:text-sm font-medium text-green-700">Agree</span>
            <span className="text-xs md:text-sm font-medium text-purple-700">Disagree</span>
          </div>
        </div>
      ) : (
        <div className="space-y-3 mt-4">
          {question.options.map((option, idx) => (
            <motion.button
              key={idx}
              onClick={() => onAnswer(questionIndex, idx)}
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              className={`w-full text-left p-4 rounded-xl border-2 transition-all duration-300 ${
                selectedAnswer === idx
                  ? 'border-rose-500 bg-gradient-to-r from-rose-50 to-pink-50 shadow-lg'
                  : 'border-gray-200 bg-white hover:border-pink-300 hover:shadow-md'
              }`}
            >
              <div className="flex items-center justify-between">
                <span className="text-sm md:text-base text-gray-700 font-medium">{option}</span>
                {selectedAnswer === idx && (
                  <div className="w-6 h-6 bg-gradient-to-br from-rose-500 to-pink-500 rounded-full flex items-center justify-center flex-shrink-0 ml-2">
                    <Check className="w-4 h-4 text-white" />
                  </div>
                )}
              </div>
            </motion.button>
          ))}
        </div>
      )}
    </motion.div>
  );
};

export default QuestionItem;
